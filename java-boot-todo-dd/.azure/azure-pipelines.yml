trigger:
  - main

variables:
  buildConfiguration: "Release"
  buildContext: "java-boot-todo-dd"
  containerAppEnv: "containerapps-env"
  dockerfilePath: "java-boot-todo-dd/Dockerfile"
  dockerRegistryServiceConnection: "dockerHub/joergjo"
  environment: "containerapp-env"
  imageRepository: "joergjo/java-boot-todo-dd"
  postgresHost: "containerapps.postgres.database.azure.com"
  resourceGroup: "containerapps"
  # This is specific to Azure DevOps tenants at MSFT - ignore ;-)
  skipComponentGovernanceDetection: true
  subscription: "azure-rm"
  tag: "$(Build.BuildId)"
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    jobs:
      - job: Build
        displayName: "Build and publish container image"
        pool:
          vmImageName: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: "Build and push image to Docker Hub"
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              buildContext: $(buildContext)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
            condition: |
              and
              (
                in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual'),
                eq(variables['Build.SourceBranchName'], 'main')
              )
          - publish: java-boot-todo-dd/deploy/app+sidecar/azuredeploy.json
            artifact: arm

  - stage: Deploy
    dependsOn: Build
    condition: |
      and
      (
        in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual'),
        eq(variables['Build.SourceBranchName'], 'main')
      )
    jobs:
      - deployment: Deploy
        displayName: "Deploy to Azure Container Apps"
        pool:
          vmImage: $(vmImageName)
        environment: $(environment)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: "Deploy Azure Container App ARM template"
                  inputs:
                    deploymentScope: "Resource Group"
                    azureResourceManagerConnection: $(subscription)
                    action: "Create Or Update Resource Group"
                    resourceGroupName: $(resourceGroup)
                    location: "North Europe"
                    templateLocation: "Linked artifact"
                    csmFile: $(Pipeline.Workspace)/arm/azuredeploy.json
                    overrideParameters: "-imageRepository $(imageRepository) -tag $(tag) -environmentName $(containerAppEnv) -postgresHost $(postgresHost) -postgresUser $(postgresUser) -postgresPassword $(postgresPassword) -ddApiKey $(ddApiKey)"
                    deploymentMode: Incremental
